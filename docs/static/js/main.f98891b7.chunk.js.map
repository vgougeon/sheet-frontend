{"version":3,"sources":["serviceWorker.js","components/layout/sidenav/sidenav.js","components/layout/header/header.js","components/layout/page-head/page-head.js","components/views/home/home.js","components/views/sheets/sheets.js","components/layout/container.js","index.js"],"names":["Boolean","window","location","hostname","match","Sidenav","state","className","exact","to","activeClassName","Component","withRouter","Header","src","PageHead","props","height","style","this","children","Home","Sheets","Routes","useLocation","useTransition","pathname","from","opacity","transform","enter","leave","map","item","key","div","path","component","Container","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8RAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,+DCbAC,G,iNACJC,MAAQ,G,wEAEN,OACE,+BACE,yBAAKC,UAAU,cACb,0BAAMA,UAAU,SAAhB,SAEF,6BACA,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,IAAIC,gBAAgB,YACpC,yBAAKH,UAAU,QACb,uBAAGA,UAAU,kBAAb,YAFJ,QAMA,kBAAC,IAAD,CAASE,GAAG,UAAUC,gBAAgB,YACpC,yBAAKH,UAAU,QACb,uBAAGA,UAAU,kBAAb,cAFJ,UAMA,kBAAC,IAAD,CAASE,GAAG,UAAUC,gBAAgB,YACpC,yBAAKH,UAAU,QACb,uBAAGA,UAAU,kBAAb,eAFJ,gB,GArBcI,cAiCPC,cAAWP,GCxBXQ,G,MAZA,WACb,OACE,gCACE,6BACE,yBAAKN,UAAU,OAAOO,IAAI,aAC1B,0BAAMP,UAAU,QAAhB,WACA,0BAAMA,UAAU,cAAhB,YCaOQ,G,kBAlBb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDV,MAAQ,CACXW,OAAQD,EAAMC,QAAU,KAHT,E,sEAOjB,OACE,yBAAKV,UAAU,SAASW,MAAO,CAAED,OAAQE,KAAKb,MAAMW,SAClD,yBAAKV,UAAU,aACZY,KAAKH,MAAMI,UAEd,yBAAKb,UAAU,mB,GAbAI,cCeRU,EAdF,WACX,OACE,yBAAKd,UAAU,QACb,kBAAC,EAAD,KACE,4BACE,2CACA,0BAAMA,UAAU,WAAhB,mBAEF,0BAAMA,UAAU,SAAhB,MAA2B,kBAAC,IAAD,CAAME,GAAG,UAAUF,UAAU,QAA7B,cAA3B,sBCCOe,G,MAVA,WACb,OACE,yBAAKf,UAAU,QACb,kBAAC,EAAD,SCIN,SAASgB,IACP,IAAMrB,EAAWsB,cAMjB,OALoBC,YAAcvB,GAAU,SAAAA,GAAQ,OAAIA,EAASwB,WAAU,CACzEC,KAAM,CAAEC,QAAS,EAAGC,UAAW,qBAC/BC,MAAO,CAAEF,QAAS,EAAGC,UAAW,iBAChCE,MAAO,CAAEH,QAAS,EAAGC,UAAW,sBAEfG,KAAI,gBAAS9B,EAAT,EAAG+B,KAAgBjB,EAAnB,EAAmBA,MAAOkB,EAA1B,EAA0BA,IAA1B,OACrB,kBAAC,IAASC,IAAV,CAAcD,IAAKA,EAAKhB,MAAOF,GAC7B,kBAAC,IAAD,CAAQd,SAAUA,GAChB,kBAAC,IAAD,CAAOM,OAAK,EAAC4B,KAAK,IAAIC,UAAWhB,IACjC,kBAAC,IAAD,CAAOb,OAAK,EAAC4B,KAAK,UAAUC,UAAWf,IACvC,kBAAC,IAAD,CAAOd,OAAK,EAAC4B,KAAK,yBAAyBC,UAAW,OACtD,kBAAC,IAAD,CAAO7B,OAAK,EAAC4B,KAAK,mBAAmBC,UAAW,OAChD,kBAAC,IAAD,CAAO7B,OAAK,EAAC4B,KAAK,gBAAgBC,UAAW,YAKrD,IAeeC,EAfG,WAChB,OACE,yBAAK/B,UAAU,QACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,SACb,kBAAC,EAAD,MACA,iCACE,kBAACgB,EAAD,UCpBVgB,IAASC,OAAO,mBARhB,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,SAKU,MAASC,SAASC,eAAe,SPoH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f98891b7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport './sidenav.sass'\r\n\r\nclass Sidenav extends Component {\r\n  state = {  }\r\n  render() { \r\n    return (  \r\n      <aside>\r\n        <div className=\"aside-head\">\r\n          <span className='light'>v0.1</span>\r\n        </div>\r\n        <nav>\r\n        <NavLink exact to=\"/\" activeClassName=\"selected\">\r\n          <div className='icon'>       \r\n            <i className=\"material-icons\">explore</i>\r\n          </div>\r\n          Home\r\n        </NavLink>\r\n        <NavLink to=\"/sheets\" activeClassName=\"selected\">\r\n          <div className='icon'>       \r\n            <i className=\"material-icons\">menu_book</i>\r\n          </div>\r\n          Sheets\r\n        </NavLink>\r\n        <NavLink to=\"/chords\" activeClassName=\"selected\">\r\n          <div className='icon'>       \r\n            <i className=\"material-icons\">audiotrack</i>\r\n          </div>\r\n          Chords\r\n        </NavLink>\r\n        </nav>\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n \r\nexport default withRouter(Sidenav);","import React, { Component } from 'react';\r\nimport './header.sass'\r\nconst Header = () => {\r\n  return (  \r\n    <header>\r\n      <div>\r\n        <img className=\"logo\" src=\"logo.png\" />\r\n        <span className=\"bold\">Sheets </span>\r\n        <span className=\"ml-1 light\">2020</span>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n \r\nexport default Header;","import React, { Component } from 'react';\r\nimport './page-head.sass'\r\nclass PageHead extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  \r\n      height: props.height || 250\r\n    }\r\n  }\r\n  render() { \r\n    return (  \r\n      <div className=\"p-head\" style={{ height: this.state.height}}>\r\n        <div className=\"p-content\">\r\n          {this.props.children}\r\n        </div>\r\n        <div className=\"page-head\">\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PageHead;","import React, { Component } from 'react';\r\nimport PageHead from '../../layout/page-head/page-head';\r\nimport { Link } from 'react-router-dom'\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"view\">\r\n      <PageHead>\r\n        <h2>\r\n          <span>Explorez </span>\r\n          <span className=\"regular\">les partitions</span>\r\n        </h2>\r\n        <span className='muted'>Ou <Link to=\"/sheets\" className=\"bold\">recherchez</Link> des partitions</span>\r\n      </PageHead>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Home;","import React, { Component } from 'react';\r\nimport PageHead from '../../layout/page-head/page-head';\r\nconst Sheets = () => {\r\n  return (  \r\n    <div className=\"view\">\r\n      <PageHead>\r\n        \r\n      </PageHead>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Sheets;","import React from 'react';\r\nimport { Switch, Route, useLocation } from 'react-router-dom'\r\nimport { useTransition, animated } from 'react-spring'\r\nimport Sidenav from \"./sidenav/sidenav\";\r\nimport Header from \"./header/header\";\r\nimport Home from '../views/home/home'\r\nimport './container.sass'\r\nimport Sheets from '../views/sheets/sheets';\r\n\r\nfunction Routes() {\r\n  const location = useLocation()\r\n  const transitions = useTransition(location, location => location.pathname, {\r\n    from: { opacity: 0, transform: 'translateX(-100%)' },\r\n    enter: { opacity: 1, transform: 'translateX(0)' },\r\n    leave: { opacity: 0, transform: 'translateX(100%)' }\r\n  })\r\n  return transitions.map(({ item: location, props, key }) => (\r\n    <animated.div key={key} style={props}>\r\n      <Switch location={location}>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/sheets\" component={Sheets} />\r\n        <Route exact path=\"/user/:username/:menu?\" component={null} />\r\n        <Route exact path=\"/game/:id/:menu?\" component={null} />\r\n        <Route exact path=\"/party/:game?\" component={null} />\r\n      </Switch>\r\n    </animated.div>\r\n  ))\r\n}\r\nconst Container = () => {\r\n  return (\r\n    <div className=\"flex\">\r\n      <Sidenav />\r\n      <div className=\"w-100\">\r\n        <Header />\r\n        <section>\r\n          <Routes />\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n \r\nexport default Container;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.sass';\nimport * as serviceWorker from './serviceWorker';\nimport Container from './components/layout/container'\nimport { BrowserRouter } from 'react-router-dom'\n\nfunction App() {\n  return(\n    <BrowserRouter> \n      <Container />\n    </BrowserRouter>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}